@author %AUTHOR%
@copyright 2016 - 2017 SigScale Global Inc.
@version %VERSION%
@title %DESCRIPTION%
@doc This application implements an Online Charging System (OCS).

==Introduction==
In a communications service provider (CSP) network an Online
Charging System (OCS) is used for real-time charging of services.
The OCS controls subscriber's sessions such that usage is decremented
from the subscriber's account in real-time and once the balance is
zero all sessions are terminated.

This OCS performs authentication, authorization and accounting (AAA)
for subscribers of wireless local area network (WLAN) services (WiFi).

==Installation==
Before starting the application for the first time, an {@link //mnesia/mnesia. mnesia}
schema should be created and started on all nodes the application
should run.Schema should be created on a list of nodes where the
{@link //ocs. ocs} application will run.
e.g &#058;
 	```
	1> mnesia:create_schema([node()]).
	ok
	2> mnesia:start().
	ok
	3> ocs_app:install([node()]).
	{ok,[client, subscriber, httpd_user, httpd_group]}
	ok
	'''

===HTTP Authentication===
To use the {@link //inets/mod_auth. mod_auth} module for authentication
you should create necessary users and groups in the {@link //mnesia/mnesia. mnesia}
tables it uses.
e.g &#058;
 	```
	4> inets:start().
	ok
	5> mod_auth:add_user("john", "g2k7hyeh6qag", [], 8080, "/").
	true
	6> mod_auth:add_user("bss", "nfc9xgp32xha", [], 8080, "/").
	true
	7> mod_auth:add_group_member("all", "john", 8080, "/").
	true
	8> mod_auth:add_group_member("all", "bss", 8080, "/").
	true
	'''

==Operation==
The OCS application will start RADIUS servers for authentication and
accounting on the configured ports. The {@link //inets. inets} application
may be started to provide a REST API and web user interface (UI).

==REST API==
The {@link //ocs. ocs} application provides a
<a href="http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm">RESTful</a>
API built on the <a href="http://tools.ietf.org/html/rfc2616">HTTP</a> protocol
and using <a href="http://tools.ietf.org/html/rfc4627">JSON</a> data encoding.

===Uniform Resource Identifiers (URI)===
In this document we will use the
<a href="http://tools.ietf.org/html/rfc6570">URI Template</a> syntax to
specify the format of
<a href="http://tools.ietf.org/html/rfc3986">URI</a>s used with the API.
The actual <a href="http://tools.ietf.org/html/rfc3986">URI</a>, as shown
in the examples, is expanded using the values of the variables in use.  For
example a URI specified using the template `/ocs/v1/subscriber/{id}' might be
formed as `/ocs/v1/subscriber/eacfd73ae10a'.

===HTTP Methods===
The <a href="http://tools.ietf.org/html/rfc2616">HTTP</a> methods used in
this API include
<a href="http://tools.ietf.org/html/rfc2616#section-9.5">`POST'</a>,
<a href="http://tools.ietf.org/html/rfc2616#section-9.3">`GET'</a>,
<a href="https://tools.ietf.org/html/rfc2068#section-19.6.1">`PATCH'</a> and
<a href="http://tools.ietf.org/html/rfc2616#section-9.7">`DELETE'</a>.

===Media Types===
Each of the media types used in this application are described below.

<p><table id="mt">
	<thead>
		<tr id="mt">
			<th id="mt">Type Name</th>
		</tr>
	</thead>
	<tbody>
		<tr id="mt">
			<td id="mt"><a href="http://tools.ietf.org/html/rfc4627">application/json</a></td>
		</tr>
	</tbody>
</table></p>

===JSON Types===
<p><div id="status"><table id="mt">
	<caption id="mt"><b>Status</b> legend:</caption>
	<thead>
		<tr id="mt">
			<th id="mt">Status</th>
			<th id="mt">Description</th>
		</tr>
	</thead>
	<tbody>
		<tr id="mt">
			<td id="mt">M</td>
			<td id="mt">Mandatory</td>
		</tr>
		<tr id="mt">
			<td id="mt">O</td>
			<td id="mt">Optional</td>
		</tr>
		<tr id="mt">
			<td id="mt">R</td>
			<td id="mt">Read only</td>
		</tr>
	</tbody>
</table></div></p>

<p><div id="subscriber"><table id="mt">
	<caption id="mt">The <b>Subscriber</b> object relates a record in `subscriber' table:</caption>
	<thead>
		<tr id="mt">
			<th id="mt">Field Name</th>
			<th id="mt">Type</th>
			<th id="mt">Status</th>
			<th id="mt">Description</th>
		</tr>
	</thead>
	<tbody>
		<tr id="mt">
			<td id="mt">id</td>
			<td id="mt">string</td>
			<td id="mt">M</td>
			<td id="mt">MAC address of the subscriber</td>
		</tr>
		<tr id="mt">
			<td id="mt">href</td>
			<td id="mt">string</td>
			<td id="mt">M</td>
			<td id="mt">URI of the subscriber resource (Mandatory only in response)</td>
		</tr>
		<tr id="mt">
			<td id="mt">password</td>
			<td id="mt">string</td>
			<td id="mt">O</td>
			<td id="mt">Password given to the subscriber (Mandatory only in response)</td>
		</tr>
		<tr id="mt">
			<td id="mt">attributes</td>
			<td id="mt">array</td>
			<td id="mt">O</td>
			<td id="mt">RADIUS attributes of the subscriber </td>
		</tr>
		<tr id="mt">
			<td id="mt">ascendDataRate</td>
			<td id="mt">integer</td>
			<td id="mt">O</td>
			<td id="mt">Download speed in bits per second</td>
		</tr>
		<tr id="mt">
			<td id="mt">ascendXmitRate</td>
			<td id="mt">integer</td>
			<td id="mt">O</td>
			<td id="mt">Upload speed in bits per second</td>
		</tr>
		<tr id="mt">
			<td id="mt">sessionTimeout</td>
			<td id="mt">integer</td>
			<td id="mt">O</td>
			<td id="mt">Session timeout after which session is cleared </td>
		</tr>
		<tr id="mt">
			<td id="mt">acctInterimInterval</td>
			<td id="mt">string</td>
			<td id="mt">O</td>
			<td id="mt">Seconds between each interim update</td>
		</tr>
		<tr id="mt">
			<td id="mt">class</td>
			<td id="mt">string</td>
			<td id="mt">O</td>
			<td id="mt">Map different user groups </td>
		</tr>
		<tr id="mt">
			<td id="mt">balance</td>
			<td id="mt">integer</td>
			<td id="mt">M</td>
			<td id="mt">Avaiable data balance of the subscriber</td>
		</tr>
		<tr id="mt">
			<td id="mt">enabled</td>
			<td id="mt">boolean</td>
			<td id="mt">O</td>
			<td id="mt">Subscriber's status of accessing the services</td>
		</tr>
	</tbody>
</table></div></p>

<p><div id="client"><table id="mt">
	<caption id="mt">The <b>Client</b> object relates a record in `client' table:</caption>
	<thead>
		<tr id="mt">
			<th id="mt">Field Name</th>
			<th id="mt">Type</th>
			<th id="mt">Status</th>
			<th id="mt">Description</th>
		</tr>
	</thead>
	<tbody>
		<tr id="mt">
			<td id="mt">id</td>
			<td id="mt">string</td>
			<td id="mt">M</td>
			<td id="mt">NAS IP address</td>
		</tr>
		<tr id="mt">
			<td id="mt">href</td>
			<td id="mt">string</td>
			<td id="mt">M</td>
			<td id="mt">URI of the client resource.(Mandatory only in response)</td>
		</tr>
		<tr id="mt">
		<tr id="mt">
			<td id="mt">port</td>
			<td id="mt">integer</td>
			<td id="mt">M</td>
			<td id="mt">Port the NAS listens for incoming messages on</td>
		</tr>
			<td id="mt">protocol</td>
			<td id="mt">string</td>
			<td id="mt">M</td>
			<td id="mt">AAA protocol used by NAS</td>
		</tr>
		<tr id="mt">
			<td id="mt">secret</td>
			<td id="mt">string</td>
			<td id="mt">M</td>
			<td id="mt">Password given to the NAS</td>
		</tr>
	</tbody>
</table></div></p>

===Resources &amp; Operations===
The resources, their URIs, the methods available on them and expected
responses, are described in this section.  Only the headers, and responses,
relevant to the function being described are included.  Any valid HTTP
headers may be included in requests and responses and responses.

<table id="op">
	<caption id="op"><b>Add Subscriber</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/subscriber</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">POST</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept, Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">Representation of a subscriber</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Location, Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Representation of the added subscriber</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">201 Created</td>
	</tr>
</table>
<p>Example request:<pre>
POST /ocs/v1/subscriber HTTP/1.1
Accept: application/json
Content-type: application/json
Content-length: nn

{
 "id":"eacfd73ae10a",
 "password":"ksc8c244npqc",
 "attributes":[
               { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
               { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
               { "name" : "sessionTimeout", "value" : 10864 },
               { "name" : "acctInterimInterval", "value" : 300},
               { "name" : "class", "value":  "skiorgs"}
              ],
 "balance":100,
 "enabled": true
}
</pre></p>
<p>Example response:<pre>
HTTP/1.1 201 Created
Location: /ocs/v1/subscriber/eacfd73ae10a
Content-Type: application/json
Content-Length: nn

{
 "id": "eacfd73ae10a",
 "href": "/ocs/v1/subscriber/eacfd73ae10a"
 "password": "ksc8c244npqc",
 "attributes":[
               { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
               { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
               { "name" : "sessionTimeout", "value" : 10864 },
               { "name" : "acctInterimInterval", "value": 300},
               { "name" : "class", "value": "skiorgs"}
              ],
 "balance": 100,
 "enabled": true
}
</pre></p>

<table id="op">
	<caption id="op"><b>Retrieve a Subscriber</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/subscriber/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">GET</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">none</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Reprsentation of a subscriber</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 OK, 404 Not Found</td>
	</tr>
</table>
<p>Example request:<pre>
GET /ocs/v1/subscriber/eacfd73ae10a HTTP/1.1
Accept: application/json
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: nn
{
 "id": "eacfd73ae10a",
 "href": "/ocs/v1/subscriber/eacfd73ae10a"
 "password": "ksc8c244npqc",
 "attributes":[
               { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
               { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
               { "name" : "sessionTimeout", "value" : 10864 },
               { "name" : "acctInterimInterval", "value": 300},
               { "name" : "class", "value": "skiorgs"}
              ],
 "balance": 100,
 "enabled": true
}
</pre></p>

<table id="op">
<caption id="op"><b>Retrieve All Subscribers</b></caption>
<tr id="op">
<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/subscriber</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">GET, HEAD</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">none</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Array of subscriber representations</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 OK, 404 Not Found</td>
	</tr>
</table>
<p>Example request:<pre>
GET /ocs/v1/subscriber HTTP/1.1
Accept: application/json
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: nn
[
 {
   "id": "5557615036fd",
   "href": "/ocs/v1/subscriber/5557615036fd"
   "password": "2h7csggw35aa",
   "attributes":[
                 { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
                 { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
                 { "name" : "sessionTimeout", "value" : 10864 },
                 { "name" : "acctInterimInterval", "value": 300},
                 { "name" : "class", "value": "skiorgs"}
                ],
  "balance": 65,
  "enabled": true
 },
 {
  "id": "e5b9265c8c0d",
  "href": "/ocs/v1/subscriber/e5b9265c8c0d"
  "password": "rzambns7knr4",
   "attributes":[
                 { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
                 { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
                 { "name" : "sessionTimeout", "value" : 10864 },
                 { "name" : "acctInterimInterval", "value": 300},
                 { "name" : "class", "value": "skiorgs"}
                ],
  "balance": 76,
  "enabled": true
 }
]
</pre></p>

<table id="op">
<caption id="op"><b>Update Subscriber Password</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/subscriber/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">PATCH</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept, Content-Type</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">Representation of update rule</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">None</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 Ok</td>
	</tr>
</table>
<p>Example request:<pre>
PATCH /ocs/v1/subscriber/eacfd73ae10a HTTP/1.1
Content-type: application/json
Accept: application/json
{
  "update":"password",
  "newpassword":"7fy8qhs7hh7n"
}
</pre></p>
<p>Example respons:<pre>
HTTP/1.1 200 Ok
Content-Type: application/json
Content-Length: 315

{
 "id": "eacfd73ae10a",
 "href": "/ocs/v1/subscriber/eacfd73ae10a",
 "password": "7fy8qhs7hh7n",
 "attributes":[
               { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
               { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
               { "name" : "sessionTimeout", "value" : 10864 },
               { "name" : "acctInterimInterval", "value": 300},
               { "name" : "class", "value": "skiorgs"}
              ],
 "balance": 100,
 "enabled": true
}
</pre></p>

<table id="op">
	<caption id="op"><b>Update Subscriber Attributes</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/subscriber/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">PATCH</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept, Content-Type</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">Representation of update rule</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">None</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 Ok</td>
	</tr>
</table>
<p>Example request:<pre>
PATCH /ocs/v1/subscriber/eacfd73ae10a HTTP/1.1
Content-type: application/json
Accept: application/json

{
 "update":"attributes",
 "balance":153,
 "attributes":[
               { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
               { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
               { "name" : "sessionTimeout", "value" : 10864 },
               { "name" : "acctInterimInterval", "value": 300},
               { "name" : "class", "value": "skiorgs"}
              ],
 "enabled":false
}
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 Ok
Content-Type: application/json
Content-Length: 315

{
 "id": "eacfd73ae10a",
 "href": "/ocs/v1/subscriber/eacfd73ae10a",
 "password": "ksc8c244npqc",
 "attributes":[
               { "name" : "ascendDataRate", "type":26, "vendorId":529, "vendorType":197, "value":1024 },
               { "name" : "ascendXmitRate", "type":26, "vendorId":529, "vendorType":255, "value":512 },
               { "name" : "sessionTimeout", "value" : 10864 },
               { "name" : "acctInterimInterval", "value": 300},
               { "name" : "class", "value": "skiorgs"}
              ],
 "balance": 153,
 "enabled": false
}
</pre></p>

<table id="op">
	<caption id="op"><b>Delete a Subscriber</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/subscriber/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">DELETE</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept, Content-Type</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">None</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">None</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">204 No Content</td>
	</tr>
</table>
<p>Example request:<pre>
DELETE /ocs/v1/subscriber/eacfd73ae10a HTTP/1.1
</pre></p>
<p>Example response:<pre>
HTTP/1.1 204 Content
Content-Length: 0
</pre></p>

<table id="op">
	<caption id="op"><b>Add Client</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/client</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">POST</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept, Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">Representation of a client</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Location, Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Representation of the added client</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">201 Created</td>
	</tr>
</table>
<p>Example request:<pre>
POST /ocs/v1/client HTTP/1.1
Accept: application/json
Content-type: application/json
Content-length: nn

{
 "id":"10.2.53.9",
 "port": 3799,
 "protocol": "RADIUS",
 "secret":"ksc8c244npqc",
}
</pre></p>
<p>Example response:<pre>
HTTP/1.1 201 Created
Location: /ocs/v1/client/10.2.53.9
Content-Type: application/json
Content-Length: nn

{
 "id": "10.2.53.9",
 "href": "/ocs/v1/client/10.2.53.9"
 "port": 3799,
 "protocol": "RADIUS",
 "secret": "ksc8c244npqc",
}
</pre></p>

<table id="op">
	<caption id="op"><b>Retrieve a Client</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/client/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">GET</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">none</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Representation of a client</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 OK, 404 Not Found</td>
	</tr>
</table>
<p>Example request:<pre>
GET /ocs/v1/client/10.2.53.9 HTTP/1.1
Accept: application/json
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: nn
{
 "id": "10.2.53.9",
 "href": "/ocs/v1/client/10.2.53.9"
 "port": 3799,
 "protocol": "RADIUS",
 "secret": "ksc8c244npqc",
}
</pre></p>

<table id="op">
<caption id="op"><b>Retrieve All Clients</b></caption>
<tr id="op">
<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/client</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">GET, HEAD</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">none</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Array of client representations</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 OK, 404 Not Found</td>
	</tr>
</table>
<p>Example request:<pre>
GET /ocs/v1/client HTTP/1.1
Accept: application/json
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: nn
[
 {
   "id": "10.2.53.9",
   "href": "/ocs/v1/client/10.2.53.9"
   "port": 3799,
   "protocol": "RADIUS",
   "secret": "2h7csggw35aa",
 },
 {
  "id": "10.2.53.10",
  "href": "/ocs/v1/client/10.2.53.10"
  "port": 3799,
  "protocol": "RADIUS",
  "secret": "rzambns7knr4",
 }
]
</pre></p>

<table id="op">
<caption id="op"><b>Update Client Password</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/client/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">PATCH</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept, Content-Type</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">Partial representation of a client</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Representation of the updated client</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 Ok</td>
	</tr>
</table>
<p>Example request:<pre>
PATCH /ocs/v1/client/10.2.53.9 HTTP/1.1
Content-type: application/json
Accept: application/json
{
  "secret":"7fy8qhs7hh7n"
}
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 Ok
Content-Type: application/json
Content-Length: 315

{
 "id": "10.2.53.9",
 "href": "/ocs/v1/client/10.2.53.9",
 "port": 3799,
 "protocol": "RADIUS",
 "secret": "7fy8qhs7hh7n",
}
</pre></p>

<table id="op">
<caption id="op"><b>Update Client Attributes</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/client/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">PATCH</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept, Content-Type</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">Partial representation of a client</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Representation of the updated client</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 Ok</td>
	</tr>
</table>
<p>Example request:<pre>
PATCH /ocs/v1/client/10.2.53.9 HTTP/1.1
Content-type: application/json
Accept: application/json
{
  "port":7899,
  "protocol": "DIAMETER" 
}
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 Ok
Content-Type: application/json
Content-Length: 315

{
 "id": "10.2.53.9",
 "href": "/ocs/v1/client/10.2.53.9",
 "port": 7899,
 "protocol": "DIAMETER",
 "secret": "7fy8qhs7hh7n",
}
</pre></p>

<table id="op">
	<caption id="op"><b>Delete a Client</b></caption>
	<tr id="op">
		<td id="opl">Resource URI</td>
		<td id="opr">/ocs/v1/client/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">DELETE</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">None</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">None</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">None</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">204 No Content</td>
	</tr>
</table>
<p>Example request:<pre>
DELETE /ocs/v1/client/10.2.53.9 HTTP/1.1
</pre></p>
<p>Example response:<pre>
HTTP/1.1 204 Content
Content-Length: 0
</pre></p>

<table id="op">
<caption id="op"><b>Get Usage Records</b></caption>
<tr id="op">
<td id="opl">Resource URI</td>
		<td id="opr">/usageManagement/v1/usage/{id}</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Methods</td>
		<td id="opr">GET, HEAD</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Headers</td>
		<td id="opr">Accept</td>
	</tr>
	<tr id="op">
		<td id="opl">Request Message Body</td>
		<td id="opr">none</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Headers</td>
		<td id="opr">Content-Type, Content-Length</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Body</td>
		<td id="opr">Array of IPDR Usage</td>
	</tr>
	<tr id="op">
		<td id="opl">Response Status</td>
		<td id="opr">200 OK, 404 Not Found</td>
	</tr>
</table>
<p>Example request:<pre>
GET /usageManagement/v1/usage/2017-02-22T10:00:14.910Z HTTP/1.1
Accept: application/json
</pre></p>
<p>Example response:<pre>
HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 0

[{"id": 1,
	"href": "/usageManagement/v1/usage/1"
	"date": "2017-02-22T10:00:14.910Z",
	"type": "PublicWLANAccessUsage",
	"description": "Public WLAN Access",
	"status" : "recieved",
	"usageSpecification" : {
		"id" : "PublicWLANAccessUsageSpec",
		"href" : "/usageManagement/v1/usageSpecification/PublicWLANAccessUsageSpec","
		"name" : "PublicWLANAccessUsageSpec"
	}
	"usageCharacteristic": [
		{
			"name" : "username",
			"value" : "DE-AD-BE-AF-CA-FE",
		},
		{
			"name" : "acctSessionId",
			"value" : "8240019a"
		},
		{
			"name" : "userIpAddress",
			"value" : "10.2.45.190",
		},
		{
			"name" : "callingStationId",
			"value" : "DE-AD-BE-AF-CA-FE",
		},
		{
			"name" : "calledStationId",
			"value" : "DE-AD-DE-AD-CA-FE:AP 1",
		},
		{
			"name" : "nasIpAddress",
			"value" : "10.2.45.190"
		},
		{
			"name" : "nasId",
			"value" : "ap1.sigscale.net"
		},
		{
			"name" : "sessionDuration",
			"value" : 3602
		},
		{
			"name" : "inputOctets",
			"value" : 54157910
		},
		{
			"name" : "outputOctets",
			"value" : 2515791
		},
		{
			"name" : "sessionTerminateCause",
			"value" : 1
		}
	]
}]
</pre></p>

==Database Schema==
<table id="mt">
	<caption id="mt">There are two persistent {@link //mnesia. mnesia} tables:</caption>
	<thead>
		<tr id="mt">
			<th id="mt">Table Name</th>
			<th id="mt">Description</th>
		</tr>
	</thead>
	<tbody>
		<tr id="mt">
			<td id="mt">client</td>
			<td id="mt">RADIUS clients</td>
		</tr>
		<tr id="mt">
			<td id="mt">subscriber</td>
			<td id="mt">Subscriber data</td>
		</tr>
	</tbody>
</table>

==Configuration==
The {@link //ocs. ocs} application is configured using the following environment variables:
<dl>
	<dt>acct_log_dir</dt>
		<dd>Path of directory to store accounting logs.</dd>
	<dt>acct_log_files</dt>
		<dd>Number of accounting log files.</dd>
	<dt>acct_log_rotate</dt>
		<dd>Duration between IPDR logging.</dd>
	<dt>acct_log_size</dt>
		<dd>Size in bytes of accounting log files.</dd>
	<dt>auth_log_dir</dt>
		<dd>Path of directory to store authorization logs.</dd>
	<dt>auth_log_files</dt>
		<dd>Number of authorization log files.</dd>
	<dt>auth_log_size</dt>
		<dd>Size in bytes of authorization log files.</dd>
	<dt>ipdr_log_dir</dt>
		<dd>Path of directory to store IPDR logs.</dd>
	<dt>radius</dt>
		<dd>Configuration groups for RADIUS authentication and accounting (includes IP address (default: {0,0,0,0}), port).</dd>
	<dt>diameter</dt>
		<dd>Configuration groups for DIAMETER authentication and accounting (includes IP address (default: {0,0,0,0}), port).</dd>
	<dt>tls_cert</dt>
		<dd>Public certificate for TLS over EAP.</dd>
	<dt>tlst_key</dt>
		<dd>Private key for TLS over EAP.</dd>
	<dt>tls_cacert</dt>
		<dd>Certificate Authority certificate for TLS over EAP.</dd>
</dl>
RADIUS servers may be configured with the following environment variables of the {@link //radius. radius} application:
<dl>
	<dt>sock_opts</dt>
		<dd>UDP socket options. ({@link //kernel/gen_udp:option(). gen_udp:option()})</dd>
</dl>
The {@link //inets. inets} application's {@link //inets/httpd. httpd} server configuration includes these environment variables:
<dl>
	<dt>{port, integer()}</dt>
		<dd>The port that the HTTP server listen to.</dd>
	<dt>{server_root, path()}</dt>
		<dd>Defines the home directory of the server.</dd>
	<dt>{document_root, path()}</dt>
		<dd>Defines the top directory of the frontend HTML files.</dd>
	<dt>{directory, {path(), [{property(), term()}]}}</dt>
		<dd>The properties for directories include:
			<dl>
				<dt>{auth_type, plain | dets | mnesia}</dt>
					<dd>Authentication table storage. (use {@link //mnesia. mnesia})</dd>
				<dt>{auth_name, string()}</dt>
					<dd>Sets the authorization realm for path().</dd>
				<dt>{require_user, [string()]}</dt>
					<dd>Defines list of users to grant access to path().</dd>
				<dt>{require_group, [string()]}</dt>
					<dd>Defines list of groups to grant access to path().</dd>
			</dl>
		</dd>
	<dt>{rest_page_size, integer()}</dt>
		<dd>Defines the maximum number of items in REST collection.</dd>
</dl>

===Example sys.config===
```

[{ocs,
      [{radius,
               [{auth,
                      [{{0,0,0,0}, 1812, []}]},
               {acct,
                     [{{0,0,0,0}, 1813, []}]}]},
      {diameter,
               [{auth,
                      [{{0,0,0,0}, 3868, []}]},
               {acct,
                     [{{0,0,0,0}, 3869, []}]}]},
      {acct_log_rotate, 1440},
      {acct_log_dir, "log/radius"},
      {auth_log_dir, "log/radius"},
      {ipdr_log_dir, "log/ipdr"},
      {tls_key, "ssl/key.pem"},
      {tls_cert, "ssl/cert.pem"},
      {tls_cacert, "ssl/ca.pem"}]},
{radius,
      [{sock_opts, [{recbuf, 131072}, {sndbuf, 131072}]}]},
{inets,
      [{services,
         [{httpd,
            [{server_name, "ocs"},
            {directory_index, ["index.html"]},
            {directory, {"/",
                  [{auth_type, mnesia},
                  {auth_name, "ocs.sigscale.org"},
                  {require_group, ["staff"]}]}},
            {transfer_disk_log, "/usr/lib/erlang/lib/ocs-%VERSION%/log/http/transfer"},
            {security_disk_log, "/usr/lib/erlang/lib/ocs-%VERSION%/log/http/security"},
            {error_disk_log, "/usr/lib/erlang/lib/ocs-%VERSION%/log/http/error"},
            {transfer_disk_log_size, {10485760, 10}},
            {error_disk_log_size, {10485760, 10}},
            {error_disk_log_size, {10485760, 10}},
            {security_disk_log_size, {10485760, 10}},
            {disk_log_format, internal},
            {modules, [mod_alias, mod_auth, mod_disk_log,
                  mod_ocs_rest_dispatcher, mod_ocs_rest_accepted_content,
                  mod_ocs_rest_get, mod_ocs_rest_post, mod_ocs_rest_patch,
                  mod_ocs_rest_delete]},
            {port, 8080},
            {socket_type, {essl,
                  [{certfile,  "/etc/ssl/certs/ocs.pem"},
                  {keyfile, "/etc/ssl/private/ocs.pem"}]}},
            {server_root, "/home/ocs"},
            {alias, {"/doc", "/usr/lib/erlang/lib/ocs-%VERSION%/doc"}},
            {document_root, "/usr/lib/erlang/lib/ocs-%VERSION%/priv/www"}]}]}]}].

'''
